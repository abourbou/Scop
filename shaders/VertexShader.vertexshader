#version 430 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 normalVertex;
layout(location = 2) in vec2 vertexUV;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;

out float fragmentColor;

out vec2 UV;

void main()
{
	// Color depends on tilt of the surface
	float tilt = dot(normalVertex, normalize(vec3(0.95,0.75,0.05)));
	fragmentColor = abs(tilt) / 1.25f + 0.2f;

	UV = vertexUV;

	// Output position of the vertex, in clip space : MVP * position
    gl_Position= MVP * vec4(vertexPosition_modelspace,1);
}

